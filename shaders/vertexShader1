#version 330 core

layout (location = 0) in vec3 aPosition;
layout (location = 1) in vec3 aNormal;
layout (location = 2) in vec2 aTexCoords;
layout (location = 3) in vec3 aTangent;
layout (location = 4) in vec3 aBitangent;
layout (location = 5) in ivec4 aBoneIDs;
layout (location = 6) in vec4 aWeights;

out vec3 Position;
out vec3 Normal;
out vec2 TexCoord;
flat out ivec4 BoneIDs;
out vec4 Weights;

uniform mat4 model, view, projection;

void main(){
	Position = aPosition;
	Normal = aNormal;
	TexCoord = aTexCoords;
	BoneIDs = aBoneIDs;
	Weights = aWeights;

	gl_Position = projection * view * model * vec4(aPosition, 1.0);
}