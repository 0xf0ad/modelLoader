#version 450 core

layout (location = 0) in vec3 pos;
layout (location = 1) in vec3 norm;
layout (location = 2) in vec2 tex;
//layout (location = 3) in vec3 aTangent;
//layout (location = 4) in vec3 aBitangent;
layout (location = 3) in unsigned char textureID;
layout (location = 4) in uint bones;
layout (location = 5) in vec4 weights;

ivec4 boneIds = ivec4((int( bones         & 255u)),
                      (int((bones >>  8u) & 255u)),
                      (int((bones >> 16u) & 255u)),
                      (int((bones >> 24u) & 255u)));

uniform mat4 projection;
uniform mat4 view;
uniform mat4 model;

uniform bool animated;

uniform mat4 finalBonesMatrices[100];
mat4 BoneTransform;

out VS_OUT{
	vec2 TexCoords;
	flat unsigned char TextureID;
} vs_out;

void main(){
	if (!animated) {
		gl_Position = projection * view * model * vec4(pos, 1.0);
	}else{
		BoneTransform  = finalBonesMatrices[boneIds[0]] * weights[0];
		BoneTransform += finalBonesMatrices[boneIds[1]] * weights[1];
		BoneTransform += finalBonesMatrices[boneIds[2]] * weights[2];
		BoneTransform += finalBonesMatrices[boneIds[3]] * weights[3];

		vec4 PosL = BoneTransform * vec4(pos, 1.0);
		gl_Position = projection * view * model * PosL;
		//vec4 NormalL = BoneTransform * vec4(Normal, 0.0);
		//Normal0 = (gWorld * NormalL).xyz;
		//WorldPos0 = (gWorld * PosL).xyz;
	}
	vs_out.TexCoords = tex;
	vs_out.TextureID = textureID;// + unsigned char (3);
}