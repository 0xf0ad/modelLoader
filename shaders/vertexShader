#version 330 core

layout (location = 0) in vec3 pos;
layout (location = 1) in vec3 norm;
layout (location = 2) in vec2 tex;
layout (location = 3) in vec3 aTangent;
layout (location = 4) in vec3 aBitangent;
layout (location = 5) in ivec4 boneIds;
layout (location = 6) in vec4 weights;

//vec4 bones[4] = {(boneIds / (0xFFFFFF)), (boneIds / (0xFFFF)), (boneIds / (0xFF)), (boneIds)};

uniform mat4 projection;
uniform mat4 view;
uniform mat4 model;

uniform bool animated;

const int MAX_BONES = 100;
const int MAX_BONE_INFLUENCE = 4;
uniform mat4 finalBonesMatrices[MAX_BONES];

out vec2 TexCoords;

void main(){
	if (!animated) {
		gl_Position = projection * view * model * vec4(pos, 1.0);
	}else{
		vec4 totalPosition = vec4(1.0f);
		for(int i = 0 ; i < MAX_BONE_INFLUENCE ; i++){
			if(boneIds[i] == 0)
				continue;
			if(boneIds[i] >= MAX_BONES) {
				totalPosition = vec4(pos,1.0f);
				break;
			}
			vec4 localPosition = finalBonesMatrices[boneIds[i]] * vec4(pos,1.0f);
			totalPosition += localPosition * weights[i];
			//vec3 localNormal = mat3(finalBonesMatrices[boneIds[i]]) * norm;
		}
		gl_Position =  projection * view * model * totalPosition;
	}
	TexCoords = tex;
}
